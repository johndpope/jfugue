//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: org/jfugue/parser/Parser.java
//

#include "IOSPrimitiveArray.h"
#include "java/util/List.h"
#include "java/util/concurrent/CopyOnWriteArrayList.h"
#include "org/jfugue/parser/Parser.h"
#include "org/jfugue/parser/ParserListener.h"
#include "org/jfugue/theory/Chord.h"
#include "org/jfugue/theory/Note.h"

@implementation OrgJfugueParserParser

- (instancetype)init {
  if (self = [super init]) {
    parserListeners_ = [[JavaUtilConcurrentCopyOnWriteArrayList alloc] init];
  }
  return self;
}

- (void)addParserListenerWithOrgJfugueParserParserListener:(id<OrgJfugueParserParserListener>)listener {
  [((JavaUtilConcurrentCopyOnWriteArrayList *) nil_chk(parserListeners_)) addWithId:listener];
}

- (void)removeParserListenerWithOrgJfugueParserParserListener:(id<OrgJfugueParserParserListener>)listener {
  [((JavaUtilConcurrentCopyOnWriteArrayList *) nil_chk(parserListeners_)) addWithId:listener];
}

- (id<JavaUtilList>)getParserListeners {
  return parserListeners_;
}

- (void)fireBeforeParsingStarts {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) beforeParsingStarts];
  }
}

- (void)fireAfterParsingFinished {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) afterParsingFinished];
  }
}

- (void)fireTrackChangedWithByte:(jbyte)track {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onTrackChangedWithByte:track];
  }
}

- (void)fireLayerChangedWithByte:(jbyte)layer {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onLayerChangedWithByte:layer];
  }
}

- (void)fireInstrumentParsedWithByte:(jbyte)instrument {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onInstrumentParsedWithByte:instrument];
  }
}

- (void)fireTempoChangedWithInt:(jint)tempoBPM {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onTempoChangedWithInt:tempoBPM];
  }
}

- (void)fireKeySignatureParsedWithByte:(jbyte)key
                              withByte:(jbyte)scale_ {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onKeySignatureParsedWithByte:key withByte:scale_];
  }
}

- (void)fireTimeSignatureParsedWithByte:(jbyte)numerator
                               withByte:(jbyte)denominator {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onTimeSignatureParsedWithByte:numerator withByte:denominator];
  }
}

- (void)fireBarLineParsedWithLong:(jlong)id_ {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onBarLineParsedWithLong:id_];
  }
}

- (void)fireTrackBeatTimeBookmarkedWithNSString:(NSString *)timeBookmarkId {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onTrackBeatTimeBookmarkedWithNSString:timeBookmarkId];
  }
}

- (void)fireTrackBeatTimeBookmarkRequestedWithNSString:(NSString *)timeBookmarkId {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onTrackBeatTimeBookmarkRequestedWithNSString:timeBookmarkId];
  }
}

- (void)fireTrackBeatTimeRequestedWithDouble:(jdouble)time {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onTrackBeatTimeRequestedWithDouble:time];
  }
}

- (void)firePitchWheelParsedWithByte:(jbyte)lsb
                            withByte:(jbyte)msb {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onPitchWheelParsedWithByte:lsb withByte:msb];
  }
}

- (void)fireChannelPressureParsedWithByte:(jbyte)pressure {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onChannelPressureParsedWithByte:pressure];
  }
}

- (void)firePolyphonicPressureParsedWithByte:(jbyte)key
                                    withByte:(jbyte)pressure {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onPolyphonicPressureParsedWithByte:key withByte:pressure];
  }
}

- (void)fireSystemExclusiveParsedWithByteArray:(IOSByteArray *)bytes {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onSystemExclusiveParsedWithByteArray:bytes];
  }
}

- (void)fireControllerEventParsedWithByte:(jbyte)controller
                                 withByte:(jbyte)value {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onControllerEventParsedWithByte:controller withByte:value];
  }
}

- (void)fireLyricParsedWithNSString:(NSString *)lyric {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onLyricParsedWithNSString:lyric];
  }
}

- (void)fireMarkerParsedWithNSString:(NSString *)marker {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onMarkerParsedWithNSString:marker];
  }
}

- (void)fireFunctionParsedWithNSString:(NSString *)id_
                                withId:(id)message {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onFunctionParsedWithNSString:id_ withId:message];
  }
}

- (void)fireNoteParsedWithOrgJfugueTheoryNote:(OrgJfugueTheoryNote *)note {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onNoteParsedWithOrgJfugueTheoryNote:note];
  }
}

- (void)fireChordParsedWithOrgJfugueTheoryChord:(OrgJfugueTheoryChord *)chord {
  id<JavaUtilList> listeners = [self getParserListeners];
  for (id<OrgJfugueParserParserListener> __strong listener in nil_chk(listeners)) {
    [((id<OrgJfugueParserParserListener>) nil_chk(listener)) onChordParsedWithOrgJfugueTheoryChord:chord];
  }
}

- (void)copyAllFieldsTo:(OrgJfugueParserParser *)other {
  [super copyAllFieldsTo:other];
  other->parserListeners_ = parserListeners_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Parser", NULL, 0x1, NULL },
    { "addParserListenerWithOrgJfugueParserParserListener:", "addParserListener", "V", 0x1, NULL },
    { "removeParserListenerWithOrgJfugueParserParserListener:", "removeParserListener", "V", 0x1, NULL },
    { "getParserListeners", NULL, "Ljava.util.List;", 0x1, NULL },
    { "fireBeforeParsingStarts", NULL, "V", 0x1, NULL },
    { "fireAfterParsingFinished", NULL, "V", 0x1, NULL },
    { "fireTrackChangedWithByte:", "fireTrackChanged", "V", 0x1, NULL },
    { "fireLayerChangedWithByte:", "fireLayerChanged", "V", 0x1, NULL },
    { "fireInstrumentParsedWithByte:", "fireInstrumentParsed", "V", 0x1, NULL },
    { "fireTempoChangedWithInt:", "fireTempoChanged", "V", 0x1, NULL },
    { "fireKeySignatureParsedWithByte:withByte:", "fireKeySignatureParsed", "V", 0x1, NULL },
    { "fireTimeSignatureParsedWithByte:withByte:", "fireTimeSignatureParsed", "V", 0x1, NULL },
    { "fireBarLineParsedWithLong:", "fireBarLineParsed", "V", 0x1, NULL },
    { "fireTrackBeatTimeBookmarkedWithNSString:", "fireTrackBeatTimeBookmarked", "V", 0x1, NULL },
    { "fireTrackBeatTimeBookmarkRequestedWithNSString:", "fireTrackBeatTimeBookmarkRequested", "V", 0x1, NULL },
    { "fireTrackBeatTimeRequestedWithDouble:", "fireTrackBeatTimeRequested", "V", 0x1, NULL },
    { "firePitchWheelParsedWithByte:withByte:", "firePitchWheelParsed", "V", 0x1, NULL },
    { "fireChannelPressureParsedWithByte:", "fireChannelPressureParsed", "V", 0x1, NULL },
    { "firePolyphonicPressureParsedWithByte:withByte:", "firePolyphonicPressureParsed", "V", 0x1, NULL },
    { "fireSystemExclusiveParsedWithByteArray:", "fireSystemExclusiveParsed", "V", 0x81, NULL },
    { "fireControllerEventParsedWithByte:withByte:", "fireControllerEventParsed", "V", 0x1, NULL },
    { "fireLyricParsedWithNSString:", "fireLyricParsed", "V", 0x1, NULL },
    { "fireMarkerParsedWithNSString:", "fireMarkerParsed", "V", 0x1, NULL },
    { "fireFunctionParsedWithNSString:withId:", "fireFunctionParsed", "V", 0x1, NULL },
    { "fireNoteParsedWithOrgJfugueTheoryNote:", "fireNoteParsed", "V", 0x1, NULL },
    { "fireChordParsedWithOrgJfugueTheoryChord:", "fireChordParsed", "V", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parserListeners_", NULL, 0x2, "Ljava.util.concurrent.CopyOnWriteArrayList;", NULL,  },
  };
  static const J2ObjcClassInfo _OrgJfugueParserParser = { "Parser", "org.jfugue.parser", NULL, 0x1, 26, methods, 1, fields, 0, NULL};
  return &_OrgJfugueParserParser;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: org/jfugue/tools/GetInstrumentsUsedTool.java
//

#include "java/lang/Byte.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/jfugue/parser/ParserException.h"
#include "org/jfugue/pattern/PatternProducer.h"
#include "org/jfugue/tools/GetInstrumentsUsedTool.h"
#include "org/staccato/StaccatoParser.h"

@implementation OrgJfugueToolsGetInstrumentsUsedTool

- (instancetype)init {
  if (self = [super init]) {
    instruments_ = [[JavaUtilArrayList alloc] init];
  }
  return self;
}

- (void)onInstrumentParsedWithByte:(jbyte)instrument {
  if (![((id<JavaUtilList>) nil_chk(instruments_)) containsWithId:JavaLangByte_valueOfWithByte_(instrument)]) {
    [instruments_ addWithId:JavaLangByte_valueOfWithByte_(instrument)];
  }
}

- (id<JavaUtilList>)getInstrumentsUsedInPatternWithOrgJfuguePatternPatternProducer:(id<OrgJfuguePatternPatternProducer>)patternProducer {
  [((id<JavaUtilList>) nil_chk(self->instruments_)) clear];
  OrgStaccatoStaccatoParser *parser = [[OrgStaccatoStaccatoParser alloc] init];
  [parser addParserListenerWithOrgJfugueParserParserListener:self];
  @try {
    [parser parseWithOrgJfuguePatternPatternProducer:patternProducer];
  }
  @catch (OrgJfugueParserParserException *e) {
    @throw [[JavaLangRuntimeException alloc] initWithJavaLangThrowable:e];
  }
  return self->instruments_;
}

- (void)copyAllFieldsTo:(OrgJfugueToolsGetInstrumentsUsedTool *)other {
  [super copyAllFieldsTo:other];
  other->instruments_ = instruments_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "GetInstrumentsUsedTool", NULL, 0x1, NULL },
    { "onInstrumentParsedWithByte:", "onInstrumentParsed", "V", 0x1, NULL },
    { "getInstrumentsUsedInPatternWithOrgJfuguePatternPatternProducer:", "getInstrumentsUsedInPattern", "Ljava.util.List;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "instruments_", NULL, 0x2, "Ljava.util.List;", NULL,  },
  };
  static const J2ObjcClassInfo _OrgJfugueToolsGetInstrumentsUsedTool = { "GetInstrumentsUsedTool", "org.jfugue.tools", NULL, 0x1, 3, methods, 1, fields, 0, NULL};
  return &_OrgJfugueToolsGetInstrumentsUsedTool;
}

@end

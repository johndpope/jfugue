//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: org/jfugue/theory/Chord.java
//

#ifndef _OrgJfugueTheoryChord_H_
#define _OrgJfugueTheoryChord_H_

@class IOSObjectArray;
@class OrgJfuguePatternPattern;
@class OrgJfugueTheoryIntervals;
@class OrgJfugueTheoryKey;
@class OrgJfugueTheoryNote;
@protocol JavaUtilMap;

#import "JreEmulation.h"
#include "java/util/Comparator.h"
#include "org/jfugue/pattern/PatternProducer.h"

#define OrgJfugueTheoryChord_OCTAVE 12

@interface OrgJfugueTheoryChord : NSObject < OrgJfuguePatternPatternProducer > {
 @public
  OrgJfugueTheoryNote *rootNote_;
  OrgJfugueTheoryIntervals *intervals_;
  jint inversion_;
}

+ (IOSObjectArray *)getChordNames;

+ (void)addChordWithNSString:(NSString *)name
                withNSString:(NSString *)intervalPattern;

+ (void)addChordWithNSString:(NSString *)name
withOrgJfugueTheoryIntervals:(OrgJfugueTheoryIntervals *)intervalPattern;

+ (OrgJfugueTheoryIntervals *)getIntervalsWithNSString:(NSString *)name;

+ (void)removeChordWithNSString:(NSString *)name;

- (instancetype)initWithNSString:(NSString *)s;

- (instancetype)initWithOrgJfugueTheoryChord:(OrgJfugueTheoryChord *)chord;

- (instancetype)initWithOrgJfugueTheoryNote:(OrgJfugueTheoryNote *)root
               withOrgJfugueTheoryIntervals:(OrgJfugueTheoryIntervals *)intervals;

- (instancetype)initWithOrgJfugueTheoryKey:(OrgJfugueTheoryKey *)key;

- (OrgJfugueTheoryNote *)getRoot;

- (OrgJfugueTheoryIntervals *)getIntervals;

- (jint)getInversion;

- (OrgJfugueTheoryChord *)setInversionWithInt:(jint)nth;

- (OrgJfugueTheoryChord *)setBassNoteWithNSString:(NSString *)newBass;

- (OrgJfugueTheoryChord *)setBassNoteWithOrgJfugueTheoryNote:(OrgJfugueTheoryNote *)newBass;

- (IOSObjectArray *)getNotes;

- (NSString *)insertChordNameIntoNoteWithOrgJfugueTheoryNote:(OrgJfugueTheoryNote *)note
                                                withNSString:(NSString *)chordName;

- (OrgJfuguePatternPattern *)getPattern;

- (OrgJfuguePatternPattern *)getPatternWithNotes;

- (jboolean)isMajor;

- (jboolean)isMinor;

- (jboolean)isEqual:(id)o;

- (NSString *)description;

- (void)copyAllFieldsTo:(OrgJfugueTheoryChord *)other;

@end

FOUNDATION_EXPORT BOOL OrgJfugueTheoryChord_initialized;
J2OBJC_STATIC_INIT(OrgJfugueTheoryChord)

J2OBJC_FIELD_SETTER(OrgJfugueTheoryChord, rootNote_, OrgJfugueTheoryNote *)
J2OBJC_FIELD_SETTER(OrgJfugueTheoryChord, intervals_, OrgJfugueTheoryIntervals *)
FOUNDATION_EXPORT IOSObjectArray *OrgJfugueTheoryChord_getChordNames();
FOUNDATION_EXPORT void OrgJfugueTheoryChord_addChordWithNSString_withNSString_(NSString *name, NSString *intervalPattern);
FOUNDATION_EXPORT void OrgJfugueTheoryChord_addChordWithNSString_withOrgJfugueTheoryIntervals_(NSString *name, OrgJfugueTheoryIntervals *intervalPattern);
FOUNDATION_EXPORT OrgJfugueTheoryIntervals *OrgJfugueTheoryChord_getIntervalsWithNSString_(NSString *name);
FOUNDATION_EXPORT void OrgJfugueTheoryChord_removeChordWithNSString_(NSString *name);

FOUNDATION_EXPORT id<JavaUtilMap> OrgJfugueTheoryChord_chordMap_;
J2OBJC_STATIC_FIELD_GETTER(OrgJfugueTheoryChord, chordMap_, id<JavaUtilMap>)
J2OBJC_STATIC_FIELD_SETTER(OrgJfugueTheoryChord, chordMap_, id<JavaUtilMap>)

FOUNDATION_EXPORT OrgJfugueTheoryIntervals *OrgJfugueTheoryChord_MAJOR_INTERVALS_;
J2OBJC_STATIC_FIELD_GETTER(OrgJfugueTheoryChord, MAJOR_INTERVALS_, OrgJfugueTheoryIntervals *)

FOUNDATION_EXPORT OrgJfugueTheoryIntervals *OrgJfugueTheoryChord_MINOR_INTERVALS_;
J2OBJC_STATIC_FIELD_GETTER(OrgJfugueTheoryChord, MINOR_INTERVALS_, OrgJfugueTheoryIntervals *)

FOUNDATION_EXPORT OrgJfugueTheoryIntervals *OrgJfugueTheoryChord_DIMINISHED_INTERVALS_;
J2OBJC_STATIC_FIELD_GETTER(OrgJfugueTheoryChord, DIMINISHED_INTERVALS_, OrgJfugueTheoryIntervals *)

FOUNDATION_EXPORT OrgJfugueTheoryIntervals *OrgJfugueTheoryChord_MAJOR_SEVENTH_INTERVALS_;
J2OBJC_STATIC_FIELD_GETTER(OrgJfugueTheoryChord, MAJOR_SEVENTH_INTERVALS_, OrgJfugueTheoryIntervals *)

FOUNDATION_EXPORT OrgJfugueTheoryIntervals *OrgJfugueTheoryChord_MINOR_SEVENTH_INTERVALS_;
J2OBJC_STATIC_FIELD_GETTER(OrgJfugueTheoryChord, MINOR_SEVENTH_INTERVALS_, OrgJfugueTheoryIntervals *)

FOUNDATION_EXPORT OrgJfugueTheoryIntervals *OrgJfugueTheoryChord_DIMINISHED_SEVENTH_INTERVALS_;
J2OBJC_STATIC_FIELD_GETTER(OrgJfugueTheoryChord, DIMINISHED_SEVENTH_INTERVALS_, OrgJfugueTheoryIntervals *)

J2OBJC_STATIC_FIELD_GETTER(OrgJfugueTheoryChord, OCTAVE, jbyte)

@interface OrgJfugueTheoryChord_$1 : NSObject < JavaUtilComparator > {
}

- (jint)compareWithId:(NSString *)s1
               withId:(NSString *)s2;

- (jint)compareLengthWithNSString:(NSString *)s1
                     withNSString:(NSString *)s2;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void OrgJfugueTheoryChord_$1_init() {}

#endif // _OrgJfugueTheoryChord_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: org/jfugue/midi/TrackTimeManager.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "java/lang/Double.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/jfugue/midi/MidiDefaults.h"
#include "org/jfugue/midi/TrackTimeManager.h"

@implementation OrgJfugueMidiTrackTimeManager

- (instancetype)init {
  if (self = [super init]) {
    [self init__];
  }
  return self;
}

- (void)init__ {
  beatTime_ = [IOSDoubleArray newArrayWithDimensions:2 lengths:(jint[]){ OrgJfugueMidiMidiDefaults_TRACKS, OrgJfugueMidiMidiDefaults_LAYERS }];
  currentTrack_ = 0;
  lastCreatedTrack_ = 0;
  currentLayer_ = [IOSByteArray newArrayWithLength:OrgJfugueMidiMidiDefaults_TRACKS];
  bookmarkedTrackTimeMap_ = [[JavaUtilHashMap alloc] init];
}

- (void)setCurrentTrackWithByte:(jbyte)track {
  if (track > self->lastCreatedTrack_) {
    for (jint i = self->lastCreatedTrack_ + 1; i < track; i++) {
      [self createTrackWithByte:(jbyte) i];
    }
    self->lastCreatedTrack_ = track;
  }
  self->currentTrack_ = track;
}

- (jbyte)getCurrentTrack {
  return self->currentTrack_;
}

- (jbyte)getLastCreatedTrack {
  return self->lastCreatedTrack_;
}

- (void)createTrackWithByte:(jbyte)track {
  for (jbyte layer = 0; layer < OrgJfugueMidiMidiDefaults_LAYERS; layer++) {
    *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(beatTime_), track)), layer) = 0;
  }
  *IOSByteArray_GetRef(nil_chk(currentLayer_), track) = 0;
}

- (void)setCurrentLayerWithByte:(jbyte)layer {
  *IOSByteArray_GetRef(nil_chk(currentLayer_), currentTrack_) = layer;
}

- (jbyte)getCurrentLayer {
  return IOSByteArray_Get(nil_chk(self->currentLayer_), [self getCurrentTrack]);
}

- (void)advanceTrackBeatTimeWithDouble:(jdouble)advanceTime {
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(beatTime_), currentTrack_)), IOSByteArray_Get(nil_chk(currentLayer_), currentTrack_)) += advanceTime;
}

- (void)setTrackBeatTimeWithDouble:(jdouble)newTime {
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(beatTime_), currentTrack_)), IOSByteArray_Get(nil_chk(currentLayer_), currentTrack_)) = newTime;
}

- (jdouble)getTrackBeatTime {
  return IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(beatTime_), currentTrack_)), IOSByteArray_Get(nil_chk(currentLayer_), currentTrack_));
}

- (void)addTrackTickTimeBookmarkWithNSString:(NSString *)timeBookmarkID {
  (void) [((id<JavaUtilMap>) nil_chk(bookmarkedTrackTimeMap_)) putWithId:timeBookmarkID withId:JavaLangDouble_valueOfWithDouble_([self getTrackBeatTime])];
}

- (jdouble)getTrackBeatTimeBookmarkWithNSString:(NSString *)timeBookmarkID {
  return [((JavaLangDouble *) nil_chk([((id<JavaUtilMap>) nil_chk(bookmarkedTrackTimeMap_)) getWithId:timeBookmarkID])) doubleValue];
}

- (jdouble)getLatestTrackBeatTimeWithByte:(jbyte)track {
  jdouble latestTime = 0.0;
  for (jbyte i = 0; i < OrgJfugueMidiMidiDefaults_LAYERS; i++) {
    if (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(beatTime_), track)), i) > latestTime) {
      latestTime = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(beatTime_, track)), i);
    }
  }
  return latestTime;
}

- (void)copyAllFieldsTo:(OrgJfugueMidiTrackTimeManager *)other {
  [super copyAllFieldsTo:other];
  other->beatTime_ = beatTime_;
  other->currentTrack_ = currentTrack_;
  other->lastCreatedTrack_ = lastCreatedTrack_;
  other->currentLayer_ = currentLayer_;
  other->bookmarkedTrackTimeMap_ = bookmarkedTrackTimeMap_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "TrackTimeManager", NULL, 0x1, NULL },
    { "init__", "init", "V", 0x4, NULL },
    { "setCurrentTrackWithByte:", "setCurrentTrack", "V", 0x4, NULL },
    { "getCurrentTrack", NULL, "B", 0x1, NULL },
    { "getLastCreatedTrack", NULL, "B", 0x4, NULL },
    { "createTrackWithByte:", "createTrack", "V", 0x4, NULL },
    { "setCurrentLayerWithByte:", "setCurrentLayer", "V", 0x1, NULL },
    { "getCurrentLayer", NULL, "B", 0x4, NULL },
    { "advanceTrackBeatTimeWithDouble:", "advanceTrackBeatTime", "V", 0x1, NULL },
    { "setTrackBeatTimeWithDouble:", "setTrackBeatTime", "V", 0x1, NULL },
    { "getTrackBeatTime", NULL, "D", 0x1, NULL },
    { "addTrackTickTimeBookmarkWithNSString:", "addTrackTickTimeBookmark", "V", 0x1, NULL },
    { "getTrackBeatTimeBookmarkWithNSString:", "getTrackBeatTimeBookmark", "D", 0x1, NULL },
    { "getLatestTrackBeatTimeWithByte:", "getLatestTrackBeatTime", "D", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "beatTime_", NULL, 0x2, "[[D", NULL,  },
    { "currentTrack_", NULL, 0x2, "B", NULL,  },
    { "lastCreatedTrack_", NULL, 0x2, "B", NULL,  },
    { "currentLayer_", NULL, 0x2, "[B", NULL,  },
    { "bookmarkedTrackTimeMap_", NULL, 0x2, "Ljava.util.Map;", NULL,  },
  };
  static const J2ObjcClassInfo _OrgJfugueMidiTrackTimeManager = { "TrackTimeManager", "org.jfugue.midi", NULL, 0x1, 14, methods, 5, fields, 0, NULL};
  return &_OrgJfugueMidiTrackTimeManager;
}

@end

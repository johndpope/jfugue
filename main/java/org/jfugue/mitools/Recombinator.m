//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: org/jfugue/mitools/Recombinator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "org/jfugue/mitools/Recombinator.h"
#include "org/jfugue/pattern/Pattern.h"

__attribute__((unused)) static OrgJfuguePatternPattern *OrgJfugueMitoolsRecombinator_loopBothWithNSString_(OrgJfugueMitoolsRecombinator *self, NSString *instructions);
__attribute__((unused)) static OrgJfuguePatternPattern *OrgJfugueMitoolsRecombinator_loop1WithNSString_(OrgJfugueMitoolsRecombinator *self, NSString *instructions);
__attribute__((unused)) static OrgJfuguePatternPattern *OrgJfugueMitoolsRecombinator_loop0WithNSString_(OrgJfugueMitoolsRecombinator *self, NSString *instructions);
__attribute__((unused)) static void OrgJfugueMitoolsRecombinator_createWorkingArrays(OrgJfugueMitoolsRecombinator *self);

@implementation OrgJfugueMitoolsRecombinator

- (instancetype)init {
  return [super init];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)things0
                    withJavaUtilList:(id<JavaUtilList>)things1 {
  if (self = [super init]) {
    things0AsList_ = things0;
    things1AsList_ = things1;
  }
  return self;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)things0
                   withNSObjectArray:(IOSObjectArray *)things1 {
  if (self = [super init]) {
    things0AsList_ = things0;
    things1AsArray_ = things1;
  }
  return self;
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)things0
                     withJavaUtilList:(id<JavaUtilList>)things1 {
  if (self = [super init]) {
    things0AsArray_ = things0;
    things1AsList_ = things1;
  }
  return self;
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)things0
                    withNSObjectArray:(IOSObjectArray *)things1 {
  if (self = [super init]) {
    things0AsArray_ = things0;
    things1AsArray_ = things1;
  }
  return self;
}

- (OrgJfugueMitoolsRecombinator *)putWithInt:(jint)index
                            withJavaUtilList:(id<JavaUtilList>)things {
  switch (index) {
    case 0:
    things0AsList_ = things;
    things0AsArray_ = nil;
    break;
    case 1:
    things1AsList_ = things;
    things1AsArray_ = nil;
    break;
    default:
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Index to Recombinator must be either 0 or 1; provided value is ", index)];
  }
  return self;
}

- (OrgJfugueMitoolsRecombinator *)putWithInt:(jint)index
                           withNSObjectArray:(IOSObjectArray *)things {
  switch (index) {
    case 0:
    things0AsList_ = nil;
    things0AsArray_ = things;
    break;
    case 1:
    things1AsList_ = nil;
    things1AsArray_ = things;
    break;
    default:
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I", @"Index to Recombinator must be either 0 or 1; provided value is ", index)];
  }
  return self;
}

- (OrgJfuguePatternPattern *)recombineWithNSString:(NSString *)instructions
 withOrgJfugueMitoolsRecombinator_LoopBehaviorEnum:(OrgJfugueMitoolsRecombinator_LoopBehaviorEnum *)option {
  OrgJfugueMitoolsRecombinator_createWorkingArrays(self);
  switch ([option ordinal]) {
    case OrgJfugueMitoolsRecombinator_LoopBehavior_LOOP_BOTH:
    return OrgJfugueMitoolsRecombinator_loopBothWithNSString_(self, instructions);
    case OrgJfugueMitoolsRecombinator_LoopBehavior_LOOP_0_FIRST:
    return OrgJfugueMitoolsRecombinator_loop0WithNSString_(self, instructions);
    case OrgJfugueMitoolsRecombinator_LoopBehavior_LOOP_1_FIRST:
    return OrgJfugueMitoolsRecombinator_loop1WithNSString_(self, instructions);
    default:
    return nil;
  }
}

- (OrgJfuguePatternPattern *)loopBothWithNSString:(NSString *)instructions {
  return OrgJfugueMitoolsRecombinator_loopBothWithNSString_(self, instructions);
}

- (OrgJfuguePatternPattern *)loop1WithNSString:(NSString *)instructions {
  return OrgJfugueMitoolsRecombinator_loop1WithNSString_(self, instructions);
}

- (OrgJfuguePatternPattern *)loop0WithNSString:(NSString *)instructions {
  return OrgJfugueMitoolsRecombinator_loop0WithNSString_(self, instructions);
}

- (void)createWorkingArrays {
  OrgJfugueMitoolsRecombinator_createWorkingArrays(self);
}

- (void)copyAllFieldsTo:(OrgJfugueMitoolsRecombinator *)other {
  [super copyAllFieldsTo:other];
  other->things0AsList_ = things0AsList_;
  other->things0AsArray_ = things0AsArray_;
  other->things0WorkingArray_ = things0WorkingArray_;
  other->things1AsList_ = things1AsList_;
  other->things1AsArray_ = things1AsArray_;
  other->things1WorkingArray_ = things1WorkingArray_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Recombinator", NULL, 0x1, NULL },
    { "initWithJavaUtilList:withJavaUtilList:", "Recombinator", NULL, 0x1, NULL },
    { "initWithJavaUtilList:withNSObjectArray:", "Recombinator", NULL, 0x1, NULL },
    { "initWithNSObjectArray:withJavaUtilList:", "Recombinator", NULL, 0x1, NULL },
    { "initWithNSObjectArray:withNSObjectArray:", "Recombinator", NULL, 0x1, NULL },
    { "putWithInt:withJavaUtilList:", "put", "Lorg.jfugue.mitools.Recombinator;", 0x1, NULL },
    { "putWithInt:withNSObjectArray:", "put", "Lorg.jfugue.mitools.Recombinator;", 0x1, NULL },
    { "recombineWithNSString:withOrgJfugueMitoolsRecombinator_LoopBehaviorEnum:", "recombine", "Lorg.jfugue.pattern.Pattern;", 0x1, NULL },
    { "loopBothWithNSString:", "loopBoth", "Lorg.jfugue.pattern.Pattern;", 0x2, NULL },
    { "loop1WithNSString:", "loop1", "Lorg.jfugue.pattern.Pattern;", 0x2, NULL },
    { "loop0WithNSString:", "loop0", "Lorg.jfugue.pattern.Pattern;", 0x2, NULL },
    { "createWorkingArrays", NULL, "V", 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "things0AsList_", NULL, 0x2, "Ljava.util.List;", NULL,  },
    { "things0AsArray_", NULL, 0x2, "[Ljava.lang.Object;", NULL,  },
    { "things0WorkingArray_", NULL, 0x2, "[Ljava.lang.Object;", NULL,  },
    { "things1AsList_", NULL, 0x2, "Ljava.util.List;", NULL,  },
    { "things1AsArray_", NULL, 0x2, "[Ljava.lang.Object;", NULL,  },
    { "things1WorkingArray_", NULL, 0x2, "[Ljava.lang.Object;", NULL,  },
  };
  static const J2ObjcClassInfo _OrgJfugueMitoolsRecombinator = { "Recombinator", "org.jfugue.mitools", NULL, 0x1, 12, methods, 6, fields, 0, NULL};
  return &_OrgJfugueMitoolsRecombinator;
}

@end

OrgJfuguePatternPattern *OrgJfugueMitoolsRecombinator_loopBothWithNSString_(OrgJfugueMitoolsRecombinator *self, NSString *instructions) {
  OrgJfuguePatternPattern *pattern = [[OrgJfuguePatternPattern alloc] init];
  for (jint i = 0; i < JavaLangMath_maxWithInt_withInt_(((IOSObjectArray *) nil_chk(self->things0WorkingArray_))->size_, ((IOSObjectArray *) nil_chk(self->things1WorkingArray_))->size_); i++) {
    NSString *patternPiece = [((NSString *) nil_chk(instructions)) replaceAll:@"\\$0" withReplacement:[nil_chk(IOSObjectArray_Get(self->things0WorkingArray_, i % self->things0WorkingArray_->size_)) description]];
    (void) [pattern addWithNSString:[((NSString *) nil_chk(patternPiece)) replaceAll:@"\\$1" withReplacement:[nil_chk(IOSObjectArray_Get(self->things1WorkingArray_, i % self->things1WorkingArray_->size_)) description]]];
  }
  return pattern;
}

OrgJfuguePatternPattern *OrgJfugueMitoolsRecombinator_loop1WithNSString_(OrgJfugueMitoolsRecombinator *self, NSString *instructions) {
  OrgJfuguePatternPattern *pattern = [[OrgJfuguePatternPattern alloc] init];
  {
    IOSObjectArray *a__ = self->things0WorkingArray_;
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id obj0 = *b__++;
      NSString *patternPiece = [((NSString *) nil_chk(instructions)) replaceAll:@"\\$0" withReplacement:[nil_chk(obj0) description]];
      {
        IOSObjectArray *a__ = self->things1WorkingArray_;
        id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        id const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          id obj1 = *b__++;
          (void) [pattern addWithNSString:[((NSString *) nil_chk(patternPiece)) replaceAll:@"\\$1" withReplacement:[nil_chk(obj1) description]]];
        }
      }
    }
  }
  return pattern;
}

OrgJfuguePatternPattern *OrgJfugueMitoolsRecombinator_loop0WithNSString_(OrgJfugueMitoolsRecombinator *self, NSString *instructions) {
  OrgJfuguePatternPattern *pattern = [[OrgJfuguePatternPattern alloc] init];
  {
    IOSObjectArray *a__ = self->things1WorkingArray_;
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id obj1 = *b__++;
      NSString *patternPiece = [((NSString *) nil_chk(instructions)) replaceAll:@"\\$1" withReplacement:[nil_chk(obj1) description]];
      {
        IOSObjectArray *a__ = self->things0WorkingArray_;
        id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        id const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          id obj0 = *b__++;
          (void) [pattern addWithNSString:[((NSString *) nil_chk(patternPiece)) replaceAll:@"\\$0" withReplacement:[nil_chk(obj0) description]]];
        }
      }
    }
  }
  return pattern;
}

void OrgJfugueMitoolsRecombinator_createWorkingArrays(OrgJfugueMitoolsRecombinator *self) {
  if (self->things0AsArray_ != nil) {
    self->things0WorkingArray_ = JavaUtilArrays_copyOfWithNSObjectArray_withInt_(self->things0AsArray_, self->things0AsArray_->size_);
  }
  else if (self->things0AsList_ != nil) {
    (void) [self->things0AsList_ toArrayWithNSObjectArray:self->things0WorkingArray_];
  }
  else {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Recombinator cannot recombine; there is no set of objects for $0"];
  }
  if (self->things1AsArray_ != nil) {
    self->things1WorkingArray_ = JavaUtilArrays_copyOfWithNSObjectArray_withInt_(self->things1AsArray_, self->things1AsArray_->size_);
  }
  else if (self->things1AsList_ != nil) {
    (void) [self->things1AsList_ toArrayWithNSObjectArray:self->things1WorkingArray_];
  }
  else {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Recombinator cannot recombine; there is no set of objects for $1"];
  }
}

BOOL OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_initialized = NO;

OrgJfugueMitoolsRecombinator_LoopBehaviorEnum *OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_values_[3];

@implementation OrgJfugueMitoolsRecombinator_LoopBehaviorEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

FOUNDATION_EXPORT IOSObjectArray *OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_values() {
  return [IOSObjectArray arrayWithObjects:OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_values_ count:3 type:[IOSClass classWithClass:[OrgJfugueMitoolsRecombinator_LoopBehaviorEnum class]]];
}
+ (IOSObjectArray *)values {
  return OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_values();
}

+ (OrgJfugueMitoolsRecombinator_LoopBehaviorEnum *)valueOfWithNSString:(NSString *)name {
  return OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_valueOfWithNSString_(name);
}

OrgJfugueMitoolsRecombinator_LoopBehaviorEnum *OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_valueOfWithNSString_(NSString *name) {
  for (int i = 0; i < 3; i++) {
    OrgJfugueMitoolsRecombinator_LoopBehaviorEnum *e = OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgJfugueMitoolsRecombinator_LoopBehaviorEnum class]) {
    OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_LOOP_0_FIRST = [[OrgJfugueMitoolsRecombinator_LoopBehaviorEnum alloc] initWithNSString:@"LOOP_0_FIRST" withInt:0];
    OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_LOOP_1_FIRST = [[OrgJfugueMitoolsRecombinator_LoopBehaviorEnum alloc] initWithNSString:@"LOOP_1_FIRST" withInt:1];
    OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_LOOP_BOTH = [[OrgJfugueMitoolsRecombinator_LoopBehaviorEnum alloc] initWithNSString:@"LOOP_BOTH" withInt:2];
    J2OBJC_SET_INITIALIZED(OrgJfugueMitoolsRecombinator_LoopBehaviorEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:", "init", NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "LOOP_0_FIRST", "LOOP_0_FIRST", 0x4019, "Lorg.jfugue.mitools.Recombinator$LoopBehavior;", &OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_LOOP_0_FIRST,  },
    { "LOOP_1_FIRST", "LOOP_1_FIRST", 0x4019, "Lorg.jfugue.mitools.Recombinator$LoopBehavior;", &OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_LOOP_1_FIRST,  },
    { "LOOP_BOTH", "LOOP_BOTH", 0x4019, "Lorg.jfugue.mitools.Recombinator$LoopBehavior;", &OrgJfugueMitoolsRecombinator_LoopBehaviorEnum_LOOP_BOTH,  },
  };
  static const char *superclass_type_args[] = {"Lorg.jfugue.mitools.Recombinator$LoopBehavior;"};
  static const J2ObjcClassInfo _OrgJfugueMitoolsRecombinator_LoopBehaviorEnum = { "LoopBehavior", "org.jfugue.mitools", "Recombinator", 0x4019, 1, methods, 3, fields, 1, superclass_type_args};
  return &_OrgJfugueMitoolsRecombinator_LoopBehaviorEnum;
}

@end

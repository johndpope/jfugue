//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: org/staccato/functions/ArpeggiatedChordFunction.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/StringBuilder.h"
#include "org/jfugue/theory/Chord.h"
#include "org/jfugue/theory/Note.h"
#include "org/staccato/StaccatoParserContext.h"
#include "org/staccato/functions/ArpeggiatedChordFunction.h"

@implementation OrgStaccatoFunctionsArpeggiatedChordFunction

OrgStaccatoFunctionsArpeggiatedChordFunction * OrgStaccatoFunctionsArpeggiatedChordFunction_instance_;

- (instancetype)init {
  return [super init];
}

+ (OrgStaccatoFunctionsArpeggiatedChordFunction *)getInstance {
  return OrgStaccatoFunctionsArpeggiatedChordFunction_getInstance();
}

- (NSString *)applyWithNSString:(NSString *)parameters
withOrgStaccatoStaccatoParserContext:(OrgStaccatoStaccatoParserContext *)context {
  OrgJfugueTheoryChord *chord = [[OrgJfugueTheoryChord alloc] initWithNSString:parameters];
  IOSObjectArray *notes = [chord getNotes];
  jdouble duration = [((OrgJfugueTheoryNote *) nil_chk([chord getRoot])) getDuration];
  jdouble durationPerNote = duration / ((IOSObjectArray *) nil_chk(notes))->size_;
  JavaLangStringBuilder *buddy = [[JavaLangStringBuilder alloc] init];
  {
    IOSObjectArray *a__ = notes;
    OrgJfugueTheoryNote * const *b__ = a__->buffer_;
    OrgJfugueTheoryNote * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgJfugueTheoryNote *note = *b__++;
      (void) [buddy appendWithNSString:OrgJfugueTheoryNote_getToneStringWithByte_([((OrgJfugueTheoryNote *) nil_chk(note)) getValue])];
      (void) [buddy appendWithNSString:@"/"];
      (void) [buddy appendWithDouble:durationPerNote];
      (void) [buddy appendWithNSString:@" "];
    }
  }
  return [((NSString *) nil_chk([buddy description])) trim];
}

- (IOSObjectArray *)getNames {
  return [IOSObjectArray newArrayWithObjects:(id[]){ @"ARPEGGIATED", @"AR" } count:2 type:[IOSClass classWithClass:[NSString class]]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ArpeggiatedChordFunction", NULL, 0x2, NULL },
    { "getInstance", NULL, "Lorg.staccato.functions.ArpeggiatedChordFunction;", 0x9, NULL },
    { "applyWithNSString:withOrgStaccatoStaccatoParserContext:", "apply", "Ljava.lang.String;", 0x1, NULL },
    { "getNames", NULL, "[Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "instance_", NULL, 0xa, "Lorg.staccato.functions.ArpeggiatedChordFunction;", &OrgStaccatoFunctionsArpeggiatedChordFunction_instance_,  },
  };
  static const J2ObjcClassInfo _OrgStaccatoFunctionsArpeggiatedChordFunction = { "ArpeggiatedChordFunction", "org.staccato.functions", NULL, 0x1, 4, methods, 1, fields, 0, NULL};
  return &_OrgStaccatoFunctionsArpeggiatedChordFunction;
}

@end

OrgStaccatoFunctionsArpeggiatedChordFunction *OrgStaccatoFunctionsArpeggiatedChordFunction_getInstance() {
  OrgStaccatoFunctionsArpeggiatedChordFunction_init();
  if (OrgStaccatoFunctionsArpeggiatedChordFunction_instance_ == nil) {
    OrgStaccatoFunctionsArpeggiatedChordFunction_instance_ = [[OrgStaccatoFunctionsArpeggiatedChordFunction alloc] init];
  }
  return OrgStaccatoFunctionsArpeggiatedChordFunction_instance_;
}

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: org/staccato/tools/ElementWithTrack.java
//

#include "org/staccato/tools/ElementWithTrack.h"

@implementation OrgStaccatoToolsElementWithTrack

- (instancetype)initWithByte:(jbyte)track
                    withByte:(jbyte)layer
                withNSString:(NSString *)element {
  if (self = [super init]) {
    self->track_ = track;
    self->layer_ = layer;
    self->element_ = element;
  }
  return self;
}

- (jbyte)getTrack {
  return self->track_;
}

- (jbyte)getLayer {
  return self->layer_;
}

- (NSString *)getElement {
  return self->element_;
}

- (void)copyAllFieldsTo:(OrgStaccatoToolsElementWithTrack *)other {
  [super copyAllFieldsTo:other];
  other->track_ = track_;
  other->layer_ = layer_;
  other->element_ = element_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithByte:withByte:withNSString:", "ElementWithTrack", NULL, 0x1, NULL },
    { "getTrack", NULL, "B", 0x1, NULL },
    { "getLayer", NULL, "B", 0x1, NULL },
    { "getElement", NULL, "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "track_", NULL, 0x2, "B", NULL,  },
    { "layer_", NULL, 0x2, "B", NULL,  },
    { "element_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
  };
  static const J2ObjcClassInfo _OrgStaccatoToolsElementWithTrack = { "ElementWithTrack", "org.staccato.tools", NULL, 0x1, 4, methods, 3, fields, 0, NULL};
  return &_OrgStaccatoToolsElementWithTrack;
}

@end
